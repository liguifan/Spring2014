package perceptron;

import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

import datastructure.Tuple;

public class read_data {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		ArrayList<ArrayList<Tuple>> data= new ArrayList<ArrayList<Tuple>>();
		File file=new File("/Users/liguifan/Desktop/rcv1-train.vw");
		
		BufferedReader reader=null;
		int len=20000;
		double[] weight=new double[len];
		int i=0;
		try{
			reader=new BufferedReader(new FileReader(file));
			String tempstr=null;
			int line=1;
			while((tempstr=reader.readLine())!=null){
				
				ArrayList<Tuple> path=read_into_tuples(tempstr);
				int y=(int) tempstr.charAt(0)-48;
				int y_est=Math.signum(arg0)sparse_dot_product(weight, path);
				
				line++;
			}
			reader.close();
		}
		catch (IOException e){
			e.printStackTrace();
		}finally{
			if(reader!=null){
				try{
					reader.close();
				}catch (IOException e1){
				}
			}
		}
	}
	
	
	
	
	
	//Test ok!
	// Read one original line and return all the tuples corresponding to every predictor in this line;
	public static ArrayList<Tuple> read_into_tuples(String line){
		String new_line=line.substring(12,line.length()-10);
		String[] arr=new_line.split(" ");
		ArrayList<Tuple> set=new ArrayList<Tuple>();
		for(String single:arr){
			Tuple temp=extract_value(single);
			set.add(temp);
		}
		return set;
	}
	
	// Extract every single term of that line;
	public static Tuple extract_value(String single){
		String new_str=single.substring(1,single.length());
		String[] arr=new_str.split(":");
		int index=Integer.parseInt(arr[0]);
		double value=Double.parseDouble(arr[1]);
		Tuple result=new Tuple(index,value);
		return result;
	}
	
	public static double sparse_dot_product(double[] weight, ArrayList<Tuple> tuple){
		
		double sum=0;
		for(Tuple x:tuple){
			sum+=weight[x.index]*x.value;
		}
		return sum;
	}
	
}
