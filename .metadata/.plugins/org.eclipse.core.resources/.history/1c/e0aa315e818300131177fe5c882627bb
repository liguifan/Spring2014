package perceptron;

import java.util.ArrayList;

public class Voted_perceptron_algorithm {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	
	
	public static double[] voted_perceptron(ArrayList<ArrayList<Double>> data,ArrayList<Double> response, int T){
		int m=training_set.length;
		int D=training_set[0].length;
		double[][] perceptron=new double[m][D];
		ArrayList<ArrayList<Double>> weight_set=new ArrayList<ArrayList<Double>>();
		ArrayList<Double> c=new ArrayList<Double>();
		int t=0;
		int k=0;
		int size=data.get(0).size();
		while(t<=T-1){
			for(int i=1;i<=m;i++){
				
				
				
				
				if(y_est!=y[i]){
					ArrayList<Double> weight_temp=new ArrayList<Double>();
					weight_temp=update_weight(weight_set.get(k), data.get(i),data.get(i).get(size-1));
					weight_temp.add(1);
					k++;
				}
			}
			
		}
	}
	
	public static ArrayList<Double> update_weight(ArrayList<Double> weight,ArrayList<Double> data, double y){
		int len=data.size();
		ArrayList<Double> w=new ArrayList<Double>();
		for(int i=0;i<=len-1;i++){
			w.add(weight.get(i)+data.get(i)*y);
		}
		
		return w;
	
	}
	
	
	public static double dot_product(ArrayList<Double> weight,double[] b){
		double sum=0;
		for(int i=0;i<=weight.size()-1;i++){
			if(weight.get(i)==0 || b[i]==0){
				i++;
			}else{
				sum+=weight.get(i)*b[i];
			}
		}
		return sum;
	}

}
