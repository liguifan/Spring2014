package perceptron;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import datastructure.Tuple;



public class pattern_matching {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	
		String a="f3653333:1.22e-5";
		String regEx="[^0-9]:";   
		Pattern p = Pattern.compile(regEx);   
		Matcher m = p.matcher(a);   
		
		int index=extract_index(a);
		System.out.println(index);
		
		extract_value(a);
		
		
		
		
		ArrayList<Tuple> set=new ArrayList<Tuple>();
		set.add(new Tuple(345,0.343));
		set.add(new Tuple(12,0.343));
		set.add(new Tuple(122,0.1366));
		
		double[] weight=new double[500];
		
		double re=sparse_dot_product(weight, set);
		System.out.println(re);
		
	}
	
	// test ok!
	public static int extract_index(String single){
		String new_str=single.substring(1,single.length());
		return str_to_int(new_str.split(":")[0]);
	}
	
	public static void extract_value(String single){
		double re=0;
		String new_str=single.substring(1,single.length());
		String x=new_str.split(":")[1];
		
		
		
		
	}
	
	public static int str_to_int(String str){
		int sum=0;
		for(int i=0;i<=str.length()-1;i++){
			sum=10*sum+(int) str.charAt(i)-48;
		}
		return sum;
	}
	
	
	
	public static double exp_string_converter(String exp_expression){
		
		
		
	}
	
	
	public static double sparse_dot_product(double[] weight, ArrayList<Tuple> tuple){
		
		double sum=0;
		for(Tuple x:tuple){
			sum+=weight[x.index]*x.value;
		}
		return sum;
	}
	
	

}
