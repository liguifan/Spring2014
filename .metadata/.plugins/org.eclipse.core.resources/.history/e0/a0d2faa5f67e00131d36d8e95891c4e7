package recursion;

import java.util.ArrayList;

public class triangle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ArrayList<ArrayList<Integer>> triangle=new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> path1 =new ArrayList<Integer>();
		ArrayList<Integer> path2 =new ArrayList<Integer>();
		ArrayList<Integer> path3 =new ArrayList<Integer>();
		ArrayList<Integer> path4 =new ArrayList<Integer>();
		path.add(1);
		
		
	}
	
	
	
	public static void minimumTotal(ArrayList<ArrayList<Integer>> triangle) {
        
    }
	
	
	
	public static int find_path(ArrayList<ArrayList<Integer>> triangle, int col,int row, ArrayList<Integer> path ){
		
		if(row==triangle.size()){
			return triangle.get(row).get(col);
		}

		int left=find_path(triangle,col,row+1, path);
		int right=find_path(triangle,col+1,row+1, path);
		
		
		if(left>right){
			path.add(col);
		}
		else
		{
			path.add(col+1);
		}
		
			return triangle.get(row).get(col);
	}

}
