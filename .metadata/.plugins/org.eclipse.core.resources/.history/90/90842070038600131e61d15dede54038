package perceptron;

import java.util.ArrayList;

import datastructure.Tuple;

public class test1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		double[] weight=new double[6];
		
		ArrayList<Tuple> path=new ArrayList<Tuple>();
		path.add(new Tuple(1,1d));
		path.add(new Tuple(2,2d));
		path.add(new Tuple(3,3d));
//		path.add(new Tuple(4,4d));
		path.add(new Tuple(5,5d));
		path.add(new Tuple(0,51d));
		
		double te=sparse_dot_product(weight, path);
		weight=update_weight(weight, 1, path);
		te=sparse_dot_product(weight, path);
		weight=update_weight(weight, 1, path);
		te=sparse_dot_product(weight, path);
		for(double x:weight){
		System.out.println(x);
		}
		System.out.println(te);
	}
	
	
public static double sparse_dot_product(double[] weight, ArrayList<Tuple> tuple){
		
		double sum=0;
		for(Tuple x:tuple){
			sum+=weight[x.index]*x.value;
		}
		return sum;
	}
	
	public static double[] update_weight(double[] weight, int y, ArrayList<Tuple> x){
		for(Tuple single:x){
			weight[single.index]+=y*single.value;
		}
		return weight;
	}

}
