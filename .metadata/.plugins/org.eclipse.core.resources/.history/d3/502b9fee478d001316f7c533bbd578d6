package Stochastic_gradient_decent;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import datastructure.Tuple;

public class gradient_decent {
	final static int MAX=100;
	public static void main(String[] args) {
		File file=new File("/Users/liguifan/Desktop/data/rcv1-train.vw");
		BufferedReader reader=null;
		
		double alpha=0.001;
		double diff=0;
		int len=50000;
		double[] theta=new double[len];
		try{
			reader=new BufferedReader(new FileReader(file));
			String tempstr=null;
		
			while((tempstr=reader.readLine())!=null){
				
				//double bias_term=extrac_bias_term(tempstr);
				ArrayList<Tuple> path=read_into_tuples(tempstr);
				int y_original=(int) tempstr.charAt(0)-48;
				
				diff= h_theta(theta, path)-y_original;
				theta[i]+=theta[i]-alpha*diff*x[i];
				
			}
			reader.close();
		}
		catch (IOException e){
			e.printStackTrace();
		}finally{
			if(reader!=null){
				try{
					reader.close();
				}catch (IOException e1){
				}
			}
		}
	}

	
	

	
	
	public static double h_theta(double[] theta, ArrayList<Tuple> X){
		double sum=0;
		for(Tuple x:X){
			sum+=theta[x.index]*x.value;
		}
		
		return sum;
	}
	
	public final static ArrayList<Tuple> read_into_tuples(String line){
		/*
		String[] line1=line.split("features");
		String[] line2=line1[1].split("const:");
		String valid_line=line2[0].substring(1,line2[0].length());
		*/
		String valid_line=line.substring(12,line.length()-10);
		String[] arr=valid_line.split(" ");
		ArrayList<Tuple> set=new ArrayList<Tuple>();
		for(String single:arr){
			Tuple temp=extract_value(single);
			set.add(temp);
		}
		return set;
	}
	
	// test ok!
	// Extract every single term of that line;
	public final static Tuple extract_value(String single){
		String new_str=single.substring(1,single.length());
		String[] arr=new_str.split(":");
//		int index=parseInt(arr[0]);
		int index=parseInt(arr[0]);
		double value=Double.parseDouble(arr[1]);
		return new Tuple(index,value);
		
	}
	
	public static int parseInt(String str){
		int sum=0;
		for(int i=0;i<=str.length()-1;i++){
			sum=10*sum+((int)str.charAt(i)-48);
		}
		return sum;
	} 
}
