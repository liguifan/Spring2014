package path_recursion;

import datastructure.ListNode;
import datastructure.TreeNode;

public class flatten_binary_tree_to_linked_list {
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TreeNode root=new TreeNode(5);
		root.left=new TreeNode(6);
		root.left.left=new TreeNode(19);
		root.right=new TreeNode(7);
		
		ListNode list=flatten(root);
		while(list!=null){
		System.out.println(list.val);
		list=list.next;
		}
		
	}
	public static ListNode flatten(TreeNode root){
		
		
		
		if(root.left==null && root.right==null){
			
			return new ListNode(root.val);
		}
		ListNode list=new ListNode(root.val);
		ListNode head=list;
		if(root.left!=null)
			list.next=flatten(root.left);
		ListNode p=list.next;
		
		while(p!=null){
			p=p.next;
		}
		if(root.right!=null)
			p=flatten(root.right);
		
		return head;
	
  }
}
