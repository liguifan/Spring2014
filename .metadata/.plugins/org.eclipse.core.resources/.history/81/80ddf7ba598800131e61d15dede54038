package heap_manipulation;

import java.util.Comparator;
import java.util.PriorityQueue;
import java.lang.*;
public class heap_implementation {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		PriorityQueue<Integer> queue=new PriorityQueue<Integer>();
		Comparator<Integer> less=new Less<Integer>;
		
		
	}
	
	public static void pushHeap_min(int[] arr,int last, int item){
		int currPos,parentPos;
		
		currPos=last;
		parentPos=(currPos-1)/2;
		
		while(currPos!=0){
			
			if(item<arr[parentPos]){
				arr[currPos]=arr[parentPos];
				currPos=parentPos;
				parentPos=(currPos-1)/2;
			}
			else{
				break;
			}
			arr[currPos]=item;
		}
	}

}
