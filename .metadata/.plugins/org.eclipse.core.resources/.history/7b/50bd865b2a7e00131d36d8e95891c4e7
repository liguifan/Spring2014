package recursion;

import java.util.ArrayList;

public class combinations {
	static ArrayList<ArrayList<String>> set=new ArrayList<ArrayList<String>>();
	public static void main(String[] args) {
		// TODO Auto-generated method stub
			String a="james";
			ArrayList<String> path=new ArrayList<String>();
			for(int i=0;i<a.length();i++){
			combination(a, 3, i,path);
			}
			for(ArrayList<String> x:set){
				System.out.println(x);
			}
	}
	
	
	
	public static void combination(String str,int k,int index,ArrayList<String> path){
		
		if(k==1){
			System.out.println(index+" "+k+Character.toString(str.charAt(index)));
	//	ArrayList<String> path2=new ArrayList<String>(path);
			path.add(Character.toString(str.charAt(index)));
			set.add(path);
			return;
		}
	
		for(int i=index; i<=str.length()-2;i++){
			ArrayList<String> path_s=new ArrayList<String>(path);
			path_s.add(Character.toString(str.charAt(index)));
			System.out.println("liguifan"+path_s);
			combination(str,k-1,i+1,path_s);
//			path.remove(path.size()-1);
		}
		
	}
}
